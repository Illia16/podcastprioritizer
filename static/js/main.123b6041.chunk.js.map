{"version":3,"sources":["MapMode.js","Error.js","PodcastInput.js","Suggestion.js","PodcastItem.js","PodcastSaved.js","PodcastMenu.js","database.js","headerSection.js","App.js","serviceWorker.js","index.js"],"names":["MapMode","props","className","style","display","transitTime","bicycle","fastest","pedestrian","aria-label","src","map","Error","onClick","hideErrorWindow","PodcastInput","handleChangeText","e","preventDefault","setState","target","name","value","selectChange","podcastInput","options","selectedIndex","text","genreSelected","checkForChar","test","state","userInputFrom","userInputTo","genres","axios","url","method","responseType","headers","then","res","data","this","showErrorWindow","popUpError","error","console","log","htmlFor","type","id","onChange","placeholder","genre","key","event","inputText","handleSubmit","Component","Suggestion","length","Math","round","PodcastItem","showHideSuggestion","displaySuggestion","title","image","savePodcast","audio","loggedIn","onMouseEnter","onMouseLeave","alt","href","PodcastSaved","deletePodcast","controls","PodcastMenu","login","logout","podcastList","podcastItem","podcasts","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","headerSection","role","App","provider","auth","GoogleAuthProvider","signInWithPopup","result","user","userId","uid","signOut","podcast","database","ref","child","set","remove","podcastMenu","menuOpen","timeChange","time","arr","split","parseInt","from","to","params","format","start","end","size","countryCode","scalebar","margin","mapUrl","request","responseURL","route","distance","tooBig","modes","forEach","mode","routeType","timeCopy","formattedTime","catch","er","podcastCall","genreSel","q","len_max","genre_ids","results","clearResults","window","scrollTo","hideError","bind","showError","onAuthStateChanged","on","response","podArray","val","push","title_original","audio_length_sec","listennotes_url","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.123b6041.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MapMode = (props) => {\n  return (\n    <div\n      className=\"transitMap\"\n      style={{\n        display:\n          props.transitTime.bicycle &&\n          props.transitTime.fastest &&\n          props.transitTime.pedestrian\n            ? \"flex\"\n            : \"none\",\n      }}\n    >\n      <div className=\"transit\">\n        <li>\n          <span className=\"mode\">\n            <i aria-label=\"walking time\" className=\"fas fa-walking\"></i>\n          </span>\n          {props.transitTime.pedestrian <= 1\n            ? `${props.transitTime.pedestrian} minute`\n            : `${props.transitTime.pedestrian} minutes`}\n        </li>\n        <li>\n          <span className=\"mode\">\n            <i aria-label=\"biking time\" className=\"fas fa-biking\"></i>\n          </span>\n          {props.transitTime.bicycle <= 1\n            ? `${props.transitTime.bicycle} minute `\n            : `${props.transitTime.bicycle} minutes `}\n        </li>\n\n        <li>\n          <span className=\"mode\">\n            <i aria-label=\"driving time\" className=\"fas fa-car\"></i>\n          </span>\n          {props.transitTime.fastest <= 1\n            ? `${props.transitTime.fastest} minute`\n            : `${props.transitTime.fastest} minutes`}\n        </li>\n      </div>\n      <div className=\"map\">\n        <img src={props.map} />\n      </div>\n    </div>\n  );\n};\n\nexport default MapMode;\n","import React from 'react';\nimport './App.scss';\n\n\nconst Error = (props) => {\n    return(\n        <div className=\"popupBack\">\n            <div className=\"popup\">\n                <p>One of the input fields is not valid or distance is too huge</p>\n                <button onClick={props.hideErrorWindow} >CLOSE</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Error;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Error from \"./Error\";\n\nclass PodcastInput extends Component {\n  constructor() {\n    super();\n    this.state = {\n      podcastInput: \"\",\n      userInputFrom: \"\",\n      userInputTo: \"\",\n      genres: [],\n      genreSelected: \"\",\n    };\n  }\n\n  // function that listens to OUR TEXT INPUTS AND SETS a value to the appropriate input\n  handleChangeText = (e) => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // filling drop-down selection with podcast genres\n  componentDidMount() {\n    axios({\n      url: `https://listen-api.listennotes.com/api/v2/genres`,\n      method: `GET`,\n      responseType: `json`,\n      headers: {\n        \"X-ListenAPI-Key\": `d45d36385df142229be4941f98e07c20`,\n      },\n    }).then((res) => {\n      this.setState({\n        genres: res.data.genres,\n      });\n    });\n  }\n\n  // getting the name of the selected option\n  selectChange = (e) => {\n    this.setState({\n      podcastInput: e.target.options[e.target.selectedIndex].text,\n      genreSelected: e.target.value,\n    });\n  };\n\n  checkForChar = () => {\n    const regex = /^[A-Za-z0-9 ]+$/;\n    const isNotValid = regex.test(this.state.userInputFrom);\n    return isNotValid;\n  };\n\n  render() {\n    const {hideErrorWindow, showErrorWindow, error:{ popUpError } } = this.props;\n    console.log(this.checkForChar());\n    return (\n      <div>\n        <form>\n\n          <section className=\"travelDetails\">\n            <h2><i className=\"fas fa-map-marker-alt\" aria-label=\"Icon of a location pin\"></i> Type in your travel details</h2>\n            <div className=\"startingPoint\">\n              <label htmlFor=\"userInputFrom\">Starting Point:</label>\n              <input\n                type=\"text\"\n                name=\"userInputFrom\"\n                id=\"userInputFrom\"\n                value={this.state.userInputFrom}\n                onChange={this.handleChangeText}\n                placeholder=\"12 Bloor Street Toronto\"\n              />\n            </div>\n            <div className=\"destination\">\n              <label htmlFor=\"userInputTo\">Destination:</label>\n              <input\n                type=\"text\"\n                name=\"userInputTo\"\n                id=\"userInputTo\"\n                value={this.state.userInputTo}\n                onChange={this.handleChangeText}\n                placeholder=\"11 Yonge Street Toronto\"\n              />\n            </div>\n          </section>\n\n          <section className=\"podcastDetails\">\n            <div className=\"podcastSearch\">\n              <h2><i className=\"fas fa-podcast\" aria-label=\"Icon of a microphone\"></i> Type in your podcast details</h2>\n              <label htmlFor=\"podcastInput\">Podcast Search:</label>\n              <input\n                onChange={this.handleChangeText}\n                type=\"text\"\n                name=\"podcastInput\"\n                id=\"podcastInput\"\n                value={this.state.podcastInput}\n                placeholder=\"ex: genre, title, creator\"\n                aria-label=\"example: genre, title, creator\"\n              ></input>\n            </div>\n            <div className=\"podcastDropDown\">\n              <p>Or pick a genre:</p>\n              <select\n                type=\"genresSelect\"\n                id=\"genreSelect\"\n                name=\"genreSelect\"\n                onChange={this.selectChange}\n              >\n                <option value=\"\">Please select a genre</option>\n                {this.state.genres.map((genre) => {\n                  return (\n                    <option value={genre.id} key={genre.id}>\n                      {genre.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </section>\n\n          {popUpError && <Error hideErrorWindow={hideErrorWindow}/>}\n\n          <button\n            className=\"formButton\"\n            onClick={(event) => {\n              event.preventDefault();\n              // || this.checkForChar() === true\n              if (!this.state.podcastInput || !this.state.userInputFrom || !this.state.userInputTo || this.checkForChar() === false) {\n                showErrorWindow()\n              } else {\n                this.props.inputText(event, this.state.podcastInput, this.state.genreSelected);\n                this.props.handleSubmit(event, this.state.userInputFrom, this.state.userInputTo);\n                // this.setState({\n                //   podcastInput: \"\",\n                //   userInputFrom: \"\",\n                //   userInputTo: \"\",\n                //   genreSelected: \"\",\n                // })\n\n              }\n            }\n            }\n          >\n            Find suggestions!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PodcastInput;\n","import React, { Component } from \"react\";\n\nclass Suggestion extends Component {\n  render() {\n    const {\n      length,\n      transitTime,\n    } = this.props;\n\n    return (\n      <div className=\"suggestion\">\n        {Math.round(length / 60) <= 1 ? (\n          <p>Podcast length:{Math.round(length / 60)} minute </p>\n        ) : (\n            <p>Podcast length:{Math.round(length / 60)} minutes</p>\n          )}\n\n        {length / 60 < transitTime.fastest ? (\n          <p>Suggestion: You should drive!</p>\n        ) : length / 60 < transitTime.bicycle ? (\n          <div>\n            <p>Suggestion: You should bike!</p>\n            <p>Disclaimer: Please do not bike with headphones.</p>\n          </div>\n        ) : (\n              <p>Suggestion: You should walk!</p>\n            )}\n      </div>\n    );\n  }\n}\nexport default Suggestion;\n","import React, { Component } from 'react';\nimport Suggestion from \"./Suggestion\";\n\nclass PodcastItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displaySuggestion: false\n    }\n  }\n\n  showHideSuggestion = () => {\n    this.setState({\n      displaySuggestion: !this.state.displaySuggestion,\n    });\n  };\n\n  render() {\n\n    const { title, image, savePodcast, audio, id, loggedIn, url, length, transitTime } = this.props;\n    return (\n      <li\n        onMouseEnter={this.showHideSuggestion}\n        onMouseLeave={this.showHideSuggestion}\n        className=\"podcastContainer\"\n      >\n        {/* <div className=\"podcastContainer\"> */}\n        <div className=\"podcastPiece\">\n          <img src={image} alt={title}></img>\n        </div>\n        <a href={url} target=\"_blank\">Listen Here</a>\n\n        <div>\n          {this.state.displaySuggestion ? (\n            <Suggestion length={length} transitTime={transitTime} />\n          ) : (\n              <p>{title}</p>\n            )}\n        </div>\n\n        <div className=\"podcastSave\">\n          {loggedIn && (\n            <button\n              onClick={(e) => {\n                savePodcast(e, title, image, audio, id);\n              }}\n            >\n              Save Podcast\n            </button>\n          )}\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default PodcastItem;","import React from 'react';\n\nconst PodcastSaved = (props) => {\n   const { title, audio, image, id, deletePodcast} = props\n        return(\n            <li className=\"podcastItem\">\n                <div className=\"podcastNameImage\">\n                    <div className=\"podcastImageWrapper\">\n                        <img src={image} alt={title}></img>\n                    </div>\n                    <div className=\"podcastNameDelete\">\n                        <p>{title}</p>\n                        <button onClick={(e) => { deletePodcast(e, id) }}>X</button>\n                    </div>\n                </div>\n\n                <audio controls src={audio}>Your browser does not support the audio element.</audio>\n            </li>\n        )\n    \n}\n\nexport default PodcastSaved;","import React from 'react';\nimport PodcastSaved from './PodcastSaved';\n\nconst PodcastMenu = (props) => {\n    const {loggedIn, login, logout, podcastList, deletePodcast} = props\n    return(\n        <div className=\"podcastMenu\">\n\n            {/* SAVED PODCAST BY CERTAIN USER */}\n            {loggedIn ?\n                <ul className=\"podcastUserList\">\n                    {\n                        podcastList.map((podcastItem) => {\n                            const { key, podcasts } = podcastItem\n                            return (\n                                <PodcastSaved key={key} title={podcasts.title} image={podcasts.image} audio={podcasts.audio} deletePodcast={deletePodcast} id={key} />\n                            )\n                        })\n                    }\n                </ul>\n                : null}\n\n            {/* Log In/ Log Out button */}\n            {loggedIn ? <button className=\"loginButton\" onClick={logout}>Log Out</button> : <button className=\"loginButton\" onClick={login}>Log In </button>}\n\n        </div>\n    )\n}\n\nexport default PodcastMenu;","import firebase from \"firebase/app\";\nimport \"firebase/auth\"\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBA4ai_gR73-t0M4UwfozSqZG4kFu7k3GA\",\n    authDomain: \"podcastprioritizer.firebaseapp.com\",\n    databaseURL: \"https://podcastprioritizer.firebaseio.com\",\n    projectId: \"podcastprioritizer\",\n    storageBucket: \"podcastprioritizer.appspot.com\",\n    messagingSenderId: \"703854841662\",\n    appId: \"1:703854841662:web:25566ffa1b31854dd7e66f\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from \"react\"\n\nconst headerSection = () => {\n    return (<header>\n        <h1><i className=\"fas fa-headphones\" aria-label=\"Icon of headphones\"></i> Podcast Prioritizer</h1>\n        <p>Can't decide which podcast to listen to on your next journey? Not sure whether you should walk, bike or drive? Input your <span role=\"text\">Starting Point</span>, <span role=\"text\">Destination</span>, and a <span role=\"text\">Podcast Search</span> term to determine which podcast you should listen to, and how you should get there.</p>\n\n        <p>To save a podcast for later, log in using your google account by using the menu button in the top right. Once logged in you can save podcasts for later using the 'Save Podcast' button.</p>\n    </header>\n    )\n}\n\nexport default headerSection;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.scss\";\nimport MapMode from './MapMode'\nimport PodcastInput from \"./PodcastInput\";\nimport PodcastItem from \"./PodcastItem\";\nimport PodcastMenu from './PodcastMenu';\nimport firebase from \"./database\";\nimport Error from \"./Error\";\nimport HeaderSection from \"./headerSection\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modes: [\"bicycle\", \"pedestrian\", \"fastest\"],\n      genres: [],\n      transitTime: {},\n      podcasts: [],\n      mapUrl: \"\",\n      loggedIn: false,\n      userId: \"anonymous\",\n      podcastList: [],\n      popUpError: false,\n      tooBig: false,\n      menuOpen: false\n    };\n\n    this.hideError = this.hideError.bind(this);\n    this.showError = this.showError.bind(this);\n  }\n\n  // Set the popupError to false to hide the error component\n  hideError() {\n    this.setState({\n      popUpError: false,\n    });\n  }\n\n  // Set popupError to true to show the error component\n  showError() {\n    this.setState({\n      popUpError: true\n    });\n  }\n\n  // Login method for Google Authentication\n  login = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const auth = firebase.auth();\n\n    auth.signInWithPopup(provider).then((result) => {\n      const user = result.user;\n      this.setState({\n        userId: user.uid,\n        loggedIn: true\n      })\n    })\n  }\n\n  // Logout method for Google Authentication\n  logout = () => {\n    const auth = firebase.auth();\n    auth.signOut().then(() => {\n      this.setState({\n        userId: \"\",\n        podcastList: [],\n        loggedIn: false\n      })\n    })\n  }\n\n  // Save podcast to user list when button is clicked\n  savePodcast = (e, title, image, audio, id) => {\n    // Prevent default\n    e.preventDefault();\n\n    const dbRef = firebase.database().ref();\n\n    // Create a new object with required items\n    const podcast = {\n      title: title,\n      image: image,\n      audio: audio,\n    }\n\n    // Go to the user's ID and the podcast ID and set the above object\n    dbRef.child(`${this.state.userId}/${id}`).set(podcast)\n  }\n\n  // Delete podcast item from the user's list\n  deletePodcast = (e, key) => {\n    // Prevent default\n    e.preventDefault();\n\n    // Go to the user's ID in the database\n    const dbRef = firebase.database().ref(this.state.userId);\n\n    // Remove the podcast based on its ID\n    dbRef.child(key).remove();\n  }\n\n  // Set the open and close state for the menu button\n  podcastMenu = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    })\n  }\n\n  // function to modify time from 00:00:00 format to minutes\n  timeChange = (time) => {\n    const arr = time.split(\":\");\n    const add = parseInt(arr[0] * 60) + parseInt(arr[1]) + parseInt(arr[2] / 60);\n    return add;\n  };\n\n  // making an API call for ROUTE\n  handleSubmit = (e, from, to) => {\n    // Prevent default\n    e.preventDefault();\n\n    // Axios call to mapquest API to get the map of the route  \n    axios({\n      url: `https://www.mapquestapi.com/staticmap/v5/map`,\n      method: `GET`,\n      responseType: `json`,\n      params: {\n        key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\n        format: `png`,\n        start: from,\n        end: to,\n        size: `300,300`,\n        countryCode: `CA`,\n        scalebar: true,\n        margin: 40,\n      },\n    }).then((res) => {\n      this.setState({ mapUrl: res.request.responseURL });\n    });\n\n    axios({\n      url: `https://www.mapquestapi.com/directions/v2/route`,\n      method: `GET`,\n      responseType: `json`,\n      params: {\n        key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\n        from: from,\n        to: to,\n      },\n    })\n      .then((res) => {\n        if (res.data.route.distance > 100) {\n          this.setState({\n            tooBig: true,\n            popUpError: true,\n          })\n        } else {\n          // For each mode of transportation, find the transit time, convert it to minutes and save it to state\n          this.state.modes.forEach((mode) => {\n            axios({\n              url: `https://www.mapquestapi.com/directions/v2/route`,\n              method: `GET`,\n              responseType: `json`,\n              params: {\n                key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\n                from: from,\n                to: to,\n                routeType: mode,\n              },\n            })\n              .then((res) => {\n                const timeCopy = { ...this.state.transitTime }\n                timeCopy[mode] = this.timeChange(res.data.route.formattedTime);\n                this.setState({\n                  transitTime: timeCopy,\n                  tooBig: false\n                });\n              })\n              .catch((er) => {\n                console.log(er);\n              });\n          })\n        }\n      }\n      )\n  };\n\n  // making an API call for PODCAST\n  podcastCall = (e, inputText, genreSel) => {\n    // Prevent default\n    e.preventDefault();\n\n    // call the listennotes API and search for podcasts\n    axios({\n      url: `https://listen-api.listennotes.com/api/v2/search`,\n      method: `GET`,\n      responseType: `json`,\n      headers: {\n        \"X-ListenAPI-Key\": `d45d36385df142229be4941f98e07c20`,\n      },\n      params: {\n        q: inputText,\n        len_max: this.state.transitTime.pedestrian,\n        genre_ids: genreSel,\n      },\n    }).then((res) => {\n      this.setState({\n        podcasts: res.data.results,\n      });\n    });\n  };\n\n  // Clear the list of podcast results from the page\n  clearResults = () => {\n    this.setState({\n      mapUrl: \"\",\n      transitTime: {},\n      podcasts: [],\n    });\n\n    window.scrollTo(0, 0);\n  };\n\n  // componentDidMount method\n  componentDidMount() {\n    const auth = firebase.auth();\n\n    // Check to see if the user was already logged in and set the state again\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          loggedIn: true\n        });\n      }\n\n      // Set the userId state again\n      this.setState({\n        userId: user.uid,\n        loggedIn: true\n      })\n\n      // Reference the userId in the database\n      const dbRef = firebase.database().ref(this.state.userId);\n\n      // On load/change grab the user's saved list of podcasts and save to state\n      dbRef.on('value', (response) => {\n        const podArray = [];\n        const data = response.val()\n\n        for (let key in data) {\n          podArray.push({ key: key, podcasts: data[key] })\n        }\n\n        this.setState({\n          podcastList: podArray\n        })\n      })\n    })\n  }\n\n  // render method\n  render() {\n    return (\n\n      <div className=\"App\">\n        <div className=\"wrapper\">\n\n          {/* HEADER SECTION COMPONENT */}\n          <HeaderSection />\n\n          {/* MENU TO OPEN/CLOSE PODCAST LIST AND LOGIN BUTTON */}\n          <button className=\"menuButton\" onClick={this.podcastMenu}><i className=\"fas fa-bars\" aria-label=\"Button to open login and user podcast menu\"></i></button>\n\n          {/* LOGIN AND PODCAST LIST MENU */}\n          {this.state.menuOpen && <PodcastMenu key=\"podcastMenu\" loggedIn={this.state.loggedIn} podcastList={this.state.podcastList} logout={this.logout} login={this.login} deletePodcast={this.deletePodcast} />}\n\n          {/* FORM INPUT */}\n          <PodcastInput inputText={this.podcastCall} handleSubmit={this.handleSubmit} error={this.state} hideErrorWindow={this.hideError} showErrorWindow={this.showError} />\n\n          {/* SHOW MAP AND TRANSIT TIMES FOR EACH MODE OF TRANSPORTATION */}\n          {/* var message = speed >= 120 ? 'Too Fast' : (speed >= 80 ? 'Fast' : 'OK'); */}\n          {\n            this.state.popUpError && this.state.tooBig ? <Error hideErrorWindow={this.hideError} /> : (\n              !this.state.tooBig ?\n                <div>\n                  <MapMode map={this.state.mapUrl} transitTime={this.state.transitTime} />\n                  <ul>\n                    {\n                      this.state.podcasts.map((podcast) => {\n                        const { id, image, title_original, audio_length_sec, audio, listennotes_url } = podcast\n                        const { loggedIn, transitTime } = this.state\n                        return (\n                          <PodcastItem\n                            key={id}\n                            image={image}\n                            title={title_original}\n                            length={audio_length_sec}\n                            transitTime={transitTime}\n                            savePodcast={this.savePodcast}\n                            audio={audio}\n                            id={id}\n                            loggedIn={loggedIn}\n                            url={listennotes_url}\n                          />\n                        );\n                      })\n                    }\n                  </ul>\n                </div> : null\n            )\n          }\n\n          {/* CLEAR THE LIST OF PODCAST RESULTS */}\n          {this.state.podcasts.length !== 0 && !this.state.tooBig && <button className=\"resetButton\" onClick={this.clearResults}>Start over</button>}\n\n        </div>\n        <footer>Copyright &copy; Podcast Prioritizer | Made at Juno College</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//Landing header with a Get Started button, or arrow, moves to user input\n\n// User inputs for To and From\n\n// Error handling for empty inputs, regex to prevent special characters from being typed, error when address can't be found\n\n// Users submit map requests\n\n// Get travel time and distance.  Convert time to minutes and store in state\n\n// Genre dropdown or user search for podcast, user submits\n\n// take genre/search value, add time state to API query, returns 10 results\n\n// map results to page, clicking on a podcast will show whether they should walk or bike, under the grid of the results\n\n/* Components:\nApp\nLocation Input: onChange: handleLocation\nPodcast Input: onChange:handlepodcast\nPodcast Grid\nTravel Mode Result\nReset Button\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}