{"version":3,"sources":["Error.js","PodcastInput.js","PodcastItem.js","PodcastSaved.js","database.js","App.js","serviceWorker.js","index.js"],"names":["Error","props","className","PodcastInput","handleChangeText","e","preventDefault","setState","target","name","value","selectChange","console","log","options","selectedIndex","text","podcastInput","genreSelected","state","userInputFrom","userInputTo","genres","popUpError","axios","url","method","responseType","headers","then","res","data","htmlFor","type","id","this","onChange","map","genre","key","onClick","event","inputText","locationData","Component","PodcastItem","displaySuggestion","transitTime","title","length","description","image","savePodcast","listenUrl","src","alt","style","display","Math","round","pedestrian","bicycle","fastest","PodcastSaved","listenURL","deletePodcast","href","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","login","provider","auth","GoogleAuthProvider","signInWithPopup","result","user","userId","uid","logout","signOut","podcastList","dbRef","database","ref","podcast","child","set","remove","timeChange","time","arr","split","parseInt","from","to","resultsArray","timeInMins","params","format","start","end","size","countryCode","scalebar","margin","mapUrl","request","responseURL","modes","forEach","mode","routeType","manMaps","route","push","formattedTime","catch","er","setTimeout","results","displayTransit","podcastCall","genreSel","q","len_max","genre_ids","podcasts","clearResults","window","scrollTo","onAuthStateChanged","on","response","podArray","val","class","podcastItem","title_original","description_original","audio_length_sec","listennotes_url","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.88790f7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.scss';\r\n\r\nconst Error = ( props ) => {\r\n\r\n    return(\r\n        <div className=\"popupBack\">\r\n            <div className=\"popup\">\r\n                <p>Error</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Error from \"./Error\";\r\n\r\nclass PodcastInput extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      podcastInput: \"\",\r\n      userInputFrom: \"\",\r\n      userInputTo: \"\",\r\n      genres: [],\r\n      genreSelected: \"\",\r\n      popUpError: false,\r\n    };\r\n  }\r\n\r\n  // function that listens to OUR TEXT INPUTS AND SETS a value to the appropriate input\r\n  handleChangeText = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // filling drop-down selection with podcast genres\r\n  componentDidMount() {\r\n    axios({\r\n      url: `https://listen-api.listennotes.com/api/v2/genres`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      headers: {\r\n        \"X-ListenAPI-Key\": `d45d36385df142229be4941f98e07c20`,\r\n      },\r\n    }).then((res) => {\r\n      this.setState({\r\n        genres: res.data.genres,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectChange = (e) => {\r\n    // getting the name of the selected option\r\n    console.log(e.target.options[e.target.selectedIndex].text);\r\n\r\n    // this.setState({\r\n    //   podcastInput: \"\",\r\n    //   genreSelected: \"\",\r\n    // })\r\n\r\n    // if (this.state.podcastInput === \"\") {\r\n    this.setState({\r\n      podcastInput: e.target.options[e.target.selectedIndex].text,\r\n      genreSelected: e.target.value,\r\n    });\r\n    // } else {\r\n    //     this.setState({\r\n    //       genreSelected: e.target.value,\r\n    //     })\r\n    // }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label htmlFor=\"userInputFrom\">From</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userInputFrom\"\r\n            id=\"userInputFrom\"\r\n            value={this.state.userInputFrom}\r\n            onChange={this.handleChangeText}\r\n          />\r\n\r\n          <label htmlFor=\"userInputTo\">To</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userInputTo\"\r\n            id=\"userInputTo\"\r\n            value={this.state.userInputTo}\r\n            onChange={this.handleChangeText}\r\n          />\r\n          \r\n\r\n          <label htmlFor=\"podcastInput\"></label>\r\n          <input\r\n            onChange={this.handleChangeText}\r\n            type=\"text\"\r\n            name=\"podcastInput\"\r\n            id=\"podcastInput\"\r\n            value={this.state.podcastInput}\r\n          ></input>\r\n\r\n          <select\r\n            type=\"genresSelect\"\r\n            id=\"genreSelect\"\r\n            name=\"genreSelect\"\r\n            onChange={this.selectChange}\r\n          >\r\n            <option value=\"\">Please select an genre</option>\r\n            {this.state.genres.map((genre) => {\r\n              return (\r\n                <option value={genre.id} key={genre.id}>\r\n                  {genre.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n\r\n          {\r\n            this.state.popUpError ? <Error /> : null\r\n          }\r\n          \r\n          <button\r\n            onClick={ (event) => {\r\n              event.preventDefault();\r\n\r\n              if (!this.state.podcastInput || !this.state.userInputFrom || !this.state.userInputTo) {\r\n                console.log('Error')\r\n\r\n                this.setState({\r\n                  popUpError: true,\r\n                })\r\n\r\n              } else {\r\n                this.props.inputText(event, this.state.podcastInput, this.state.genreSelected);\r\n                this.props.locationData(event, this.state.userInputFrom, this.state.userInputTo);\r\n                this.setState({\r\n                  podcastInput: \"\",\r\n                  userInputFrom: \"\",\r\n                  userInputTo: \"\",\r\n                  genreSelected: \"\",\r\n                  popUpError: false,\r\n                })\r\n              }\r\n            }\r\n          }\r\n          >\r\n            Click me\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PodcastInput;\r\n","import React, { Component } from 'react';\r\n\r\nclass PodcastItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            displaySuggestion: false\r\n        }\r\n    }\r\n\r\n    displaySuggestion = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            displaySuggestion: !this.state.displaySuggestion,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { transitTime, title, description, length, image, savePodcast, listenUrl, id } = this.props;\r\n        return (\r\n            <li>\r\n                <button onClick={this.displaySuggestion} className=\"podcastButton\">\r\n                    <div className=\"thumbnailWrapper\">\r\n                        <img src={image} alt={title}></img>\r\n                        <p>{title}</p>\r\n                    </div>\r\n                </button>\r\n\r\n                <button onClick={(e) => { savePodcast(e, title, image, listenUrl, id) }}>Save podcast</button>\r\n\r\n                <div\r\n                    onClick={this.displaySuggestion}\r\n                    className=\"suggestion\"\r\n                    style={{ display: this.state.displaySuggestion ? \"block\" : \"none\", }} >\r\n                    {\r\n                        Math.round(length / 60) <= 1 ?\r\n                            <p>podcast length:{Math.round(length / 60)} minute </p> :\r\n                            <p>podcast length:{Math.round(length / 60)} minutes</p>\r\n                    }\r\n\r\n                    <p> walk:{transitTime.pedestrian} minutes</p>\r\n                    <p>bike:{transitTime.bicycle} minutes</p>\r\n                    <p>drive:{transitTime.fastest} minutes</p>\r\n\r\n                    {\r\n                        length / 60 < transitTime.fastest ?\r\n                            <p>suggestion: you should drive</p> :\r\n                            length / 60 < transitTime.bicycle ?\r\n                                <p>suggestion: you should bike</p> :\r\n                                <p>suggestion: you should walk</p>\r\n                    }\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PodcastItem;","import React from 'react';\r\n\r\nconst PodcastSaved = (props) => {\r\n   const { title, listenURL, image, id, deletePodcast} = props\r\n        return(\r\n            <li className=\"podcastItem\">\r\n                <p>{title}</p>\r\n                <div className=\"podcastImageWrapper\">\r\n                    <img src={image} alt={title}></img>\r\n                </div>\r\n                <a href={listenURL}></a>\r\n                <button onClick={(e) => {deletePodcast(e, id)}}>Delete</button>\r\n            </li>\r\n        )\r\n    \r\n}\r\n\r\nexport default PodcastSaved;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBA4ai_gR73-t0M4UwfozSqZG4kFu7k3GA\",\r\n    authDomain: \"podcastprioritizer.firebaseapp.com\",\r\n    databaseURL: \"https://podcastprioritizer.firebaseio.com\",\r\n    projectId: \"podcastprioritizer\",\r\n    storageBucket: \"podcastprioritizer.appspot.com\",\r\n    messagingSenderId: \"703854841662\",\r\n    appId: \"1:703854841662:web:25566ffa1b31854dd7e66f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.scss\";\r\nimport PodcastInput from \"./PodcastInput\";\r\nimport PodcastItem from \"./PodcastItem\";\r\nimport PodcastSaved from \"./PodcastSaved\";\r\nimport firebase from \"./database\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      results: [],\r\n      modes: [\"bicycle\", \"pedestrian\", \"fastest\"],\r\n      genres: [],\r\n      transitTime: {},\r\n      podcasts: [],\r\n      mapUrl: \"\",\r\n      displayTransit: false,\r\n      user: null,\r\n      userId: \"anonymous\",\r\n      podcastList: []\r\n    };\r\n  }\r\n\r\n  login = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const auth = firebase.auth();\r\n\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      const user = result.user;\r\n      this.setState({\r\n        user,\r\n        userId: user.uid,\r\n      })\r\n    })\r\n  }\r\n\r\n  logout = () => {\r\n    const auth = firebase.auth();\r\n    auth.signOut().then(() => {\r\n      this.setState({\r\n        user: null,\r\n        userId: \"\",\r\n        podcastList: []\r\n      })\r\n    })\r\n  }\r\n\r\n  savePodcast = (e, title, image, listenUrl, id) => {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    e.preventDefault();\r\n    const podcast = {\r\n      title: title,\r\n      image: image,\r\n      listenUrl: listenUrl,\r\n    }\r\n    dbRef.child(`${this.state.userId}/${id}`).set(podcast)\r\n  }\r\n  \r\n  deletePodcast = (e, key) => {\r\n    e.preventDefault();\r\n    const dbRef = firebase.database().ref(this.state.userId);\r\n\r\n    dbRef.child(key).remove();\r\n\r\n  }\r\n\r\n   // function to modify time from 00:00:00 format to minutes\r\n  timeChange = (time) => {\r\n    const arr = time.split(\":\");\r\n    const add =\r\n      parseInt(arr[0] * 60) + parseInt(arr[1]) + parseInt(arr[2] / 60);\r\n\r\n    return add;\r\n  };\r\n\r\n  // making an API call for ROUTE\r\n  locationData = (e, from, to) => {\r\n    e.preventDefault();\r\n\r\n    const resultsArray = [];\r\n    const timeInMins = {};\r\n\r\n    if (from !== \"\" && to !== \"\") {\r\n      axios({\r\n        url: `https://www.mapquestapi.com/staticmap/v5/map`,\r\n        method: `GET`,\r\n        responseType: `json`,\r\n        params: {\r\n          key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\r\n          format: `png`,\r\n          start: from,\r\n          end: to,\r\n          size: `200,200`,\r\n          countryCode: `CA`,\r\n          scalebar: true,\r\n          margin: 40,\r\n        },\r\n      }).then((res) => {\r\n        console.log(res);\r\n        this.setState({ mapUrl: res.request.responseURL });\r\n      });\r\n    }\r\n\r\n    this.state.modes.forEach((mode) => {\r\n      axios({\r\n        url: `https://www.mapquestapi.com/directions/v2/route`,\r\n        method: `GET`,\r\n        responseType: `json`,\r\n        params: {\r\n          key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\r\n          from: from,\r\n          to: to,\r\n          routeType: mode,\r\n          manMaps: true,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.route);\r\n          resultsArray.push(res.data.route);\r\n\r\n          timeInMins[mode] = this.timeChange(res.data.route.formattedTime);\r\n          console.log(timeInMins);\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    });\r\n\r\n    // change to async LATER!!!!\r\n    setTimeout(() => {\r\n      this.setState({\r\n        results: resultsArray,\r\n        transitTime: timeInMins,\r\n        displayTransit: true,\r\n      });\r\n      console.log(this.state.transitTime);\r\n    }, 800);\r\n  };\r\n\r\n  // making an API call for PODCAST\r\n  podcastCall = (e, inputText, genreSel) => {\r\n    e.preventDefault();\r\n\r\n    axios({\r\n      url: `https://listen-api.listennotes.com/api/v2/search`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      headers: {\r\n        \"X-ListenAPI-Key\": `d45d36385df142229be4941f98e07c20`,\r\n      },\r\n      params: {\r\n        q: inputText,\r\n        len_max: this.state.transitTime.pedestrian,\r\n        genre_ids: genreSel,\r\n      },\r\n    }).then((res) => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n        podcasts: res.data.results,\r\n      });\r\n    });\r\n  };\r\n\r\n  clearResults = () => {\r\n    this.setState({\r\n      podcasts: [],\r\n    });\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const auth = firebase.auth();\r\n\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({\r\n          user\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        userId: this.state.user.uid\r\n      })\r\n\r\n      const dbRef = firebase.database().ref(this.state.userId);\r\n\r\n      dbRef.on('value', (response) => {\r\n\r\n        console.log(dbRef);\r\n        const podArray = [];\r\n        const data = response.val()\r\n\r\n        for (let key in data) {\r\n          podArray.push({ key: key, podcasts: data[key] })\r\n        }\r\n\r\n        this.setState({\r\n          podcastList: podArray\r\n        })\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App wrapper\">\r\n\r\n          <header>\r\n          <h1>Podcast Prioritizer <i class=\"fas fa-headphones\"></i>\r\n\r\n          </h1>\r\n          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis ducimus laudantium quisquam, necessitatibus vel adipisci officiis nesciunt dolorum, distinctio, eaque deleniti sequi! Soluta officia cumque at alias cupiditate nesciunt exercitationem?</p>\r\n        </header>\r\n      \r\n        {/* SAVED PODCAST BY CERTAIN USER */}\r\n        <ul>\r\n        {\r\n          this.state.podcastList.map((podcastItem) => {\r\n            const {key, podcasts} = podcastItem\r\n            return (\r\n              <PodcastSaved key={key} title={podcasts.title} image={podcasts.image} listenURL={podcasts.listenURL} deletePodcast={this.deletePodcast} id={key} />\r\n            )\r\n          })\r\n        }\r\n        </ul>\r\n\r\n\r\n        {this.state.user ? <button onClick={this.logout}>Log out</button> : <button onClick={this.login}>Log In </button>}\r\n        \r\n        {/* FORM INPUT */}\r\n        <PodcastInput inputText={this.podcastCall} locationData={this.locationData} />\r\n      \r\n        <div className=\"transitMap\">\r\n          <div className=\"map\">\r\n            <img src={this.state.mapUrl} />\r\n          </div>\r\n\r\n          <ul\r\n            className=\"transit\"\r\n            style={{\r\n              display: this.state.displayTransit ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {\r\n              // walk time\r\n              this.state.transitTime.pedestrian <= 1 ? (\r\n                <li>walk time: {this.state.transitTime.pedestrian} minute</li>\r\n              ) : (\r\n                <li>walk time: {this.state.transitTime.pedestrian} minutes</li>\r\n              )\r\n              // bike time\r\n            }\r\n\r\n            {\r\n              this.state.transitTime.bicycle <= 1 ? (\r\n                <li>bike time: {this.state.transitTime.bicycle} minute</li>\r\n              ) : (\r\n                <li>bike time: {this.state.transitTime.bicycle} minutes</li>\r\n              )\r\n              // car time\r\n            }\r\n\r\n            {this.state.transitTime.fastest <= 1 ? (\r\n              <li>car time: {this.state.transitTime.fastest} minute</li>\r\n            ) : (\r\n              <li>car time: {this.state.transitTime.fastest} minutes</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* LIST WITH RESULTS */}\r\n         <ul>\r\n          {\r\n            this.state.podcasts.map((podcast) => {\r\n              const { id, image, title_original, description_original, audio_length_sec, listennotes_url } = podcast\r\n              return (\r\n                <PodcastItem key={id} image={image} title={title_original} description={description_original} length={audio_length_sec} transitTime={this.state.transitTime} savePodcast={this.savePodcast} listenUrl={listennotes_url} id={id} />\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n\r\n        {\r\n          // START OVER BUTTON. Only gets visible when there's a list of podcasts on the page.\r\n          this.state.podcasts.length !== 0 ? (\r\n            <button onClick={this.clearResults}>Start over</button>\r\n          ) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//Landing header with a Get Started button, or arrow, moves to user input\r\n\r\n// User inputs for To and From\r\n\r\n// Error handling for empty inputs, regex to prevent special characters from being typed, error when address can't be found\r\n\r\n// Users submit map requests\r\n\r\n// Get travel time and distance.  Convert time to minutes and store in state\r\n\r\n// Genre dropdown or user search for podcast, user submits\r\n\r\n// take genre/search value, add time state to API query, returns 10 results\r\n\r\n// map results to page, clicking on a podcast will show whether they should walk or bike, under the grid of the results\r\n\r\n/* Components:\r\nApp\r\nLocation Input: onChange: handleLocation\r\nPodcast Input: onChange:handlepodcast\r\nPodcast Grid\r\nTravel Mode Result\r\nReset Button\r\n*/\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}