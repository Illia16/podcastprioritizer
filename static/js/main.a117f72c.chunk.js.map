{"version":3,"sources":["MapMode.js","Error.js","PodcastInput.js","Suggestion.js","PodcastItem.js","PodcastSaved.js","PodcastMenu.js","database.js","headerSection.js","App.js","serviceWorker.js","index.js"],"names":["MapMode","props","className","style","display","transitTime","bicycle","fastest","pedestrian","src","map","Error","onClick","hideErrorWindow","PodcastInput","handleChangeText","e","preventDefault","setState","target","name","value","selectChange","console","log","options","selectedIndex","text","podcastInput","genreSelected","state","userInputFrom","userInputTo","genres","axios","url","method","responseType","headers","then","res","data","this","closeError","popUpError","error","aria-label","htmlFor","type","id","onChange","placeholder","genre","key","event","inputText","handleSubmit","Component","Suggestion","showHideSuggestion","stateSuggestion","propToprop","length","displaySuggestion","Math","round","PodcastItem","title","image","description","savePodcast","audio","alt","PodcastSaved","deletePodcast","controls","PodcastMenu","user","login","logout","podcastList","podcastItem","podcasts","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","headerSection","App","provider","auth","GoogleAuthProvider","signInWithPopup","result","userId","uid","signOut","dbRef","database","ref","podcast","child","set","remove","podcastMenu","menuOpen","timeChange","time","arr","split","parseInt","from","to","params","format","start","end","size","countryCode","scalebar","margin","mapUrl","request","responseURL","modes","forEach","mode","routeType","route","distance","timeCopy","formattedTime","catch","er","podcastCall","genreSel","q","len_max","genre_ids","results","clearResults","window","scrollTo","hideError","bind","showError","onAuthStateChanged","on","response","podArray","val","push","title_original","description_original","audio_length_sec","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a117f72c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst MapMode =(props)=>{\r\n return (\r\n   <div className=\"transitMap\">\r\n     <ul\r\n       className=\"transit\"\r\n       style={{\r\n         display:\r\n           props.transitTime.bicycle &&\r\n           props.transitTime.fastest &&\r\n           props.transitTime.pedestrian\r\n             ? \"block\"\r\n             : \"none\",\r\n       }}\r\n     >\r\n       {\r\n         // walk time\r\n         props.transitTime.pedestrian <= 1 ? (\r\n           <li>\r\n             <span className=\"mode\">\r\n               <i className=\"fas fa-walking\"></i>\r\n             </span>{\" \"}\r\n             {props.transitTime.pedestrian} minute\r\n           </li>\r\n         ) : (\r\n           <li>\r\n             <span className=\"mode\">\r\n               <i className=\"fas fa-walking\"></i>\r\n             </span>{\" \"}\r\n             {props.transitTime.pedestrian} minutes\r\n           </li>\r\n         )\r\n         // bike time\r\n       }\r\n\r\n       {\r\n         props.transitTime.bicycle <= 1 ? (\r\n           <li>\r\n             {\" \"}\r\n             <span className=\"mode\">\r\n               <i className=\"fas fa-biking\"></i>\r\n             </span>\r\n             {props.transitTime.bicycle} minute\r\n           </li>\r\n         ) : (\r\n           <li>\r\n             <span className=\"mode\">\r\n               <i className=\"fas fa-biking\"></i>\r\n             </span>\r\n             {props.transitTime.bicycle} minutes\r\n           </li>\r\n         )\r\n         // car time\r\n       }\r\n\r\n       {props.transitTime.fastest <= 1 ? (\r\n         <li>\r\n           <span className=\"mode\">\r\n             <i className=\"fas fa-car\"></i>\r\n           </span>\r\n           {props.transitTime.fastest} minute\r\n         </li>\r\n       ) : (\r\n         <li>\r\n           <span className=\"mode\">\r\n             <i className=\"fas fa-car\"></i>\r\n           </span>\r\n           {props.transitTime.fastest} minutes\r\n         </li>\r\n       )}\r\n     </ul>\r\n     <div className=\"map\">\r\n       <img src={props.map} />\r\n     </div>\r\n   </div>\r\n );\r\n}\r\n\r\nexport default MapMode;","import React from 'react';\r\nimport './App.scss';\r\n\r\n\r\nconst Error = (props) => {\r\n    return(\r\n        <div className=\"popupBack\">\r\n            <div className=\"popup\">\r\n                <p>One of the input fields is not valid or distance is too huge</p>\r\n                <button onClick={props.hideErrorWindow} >CLOSE</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Error from \"./Error\";\r\n\r\nclass PodcastInput extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      podcastInput: \"\",\r\n      userInputFrom: \"\",\r\n      userInputTo: \"\",\r\n      genres: [],\r\n      genreSelected: \"\",\r\n    };\r\n  }\r\n\r\n  // function that listens to OUR TEXT INPUTS AND SETS a value to the appropriate input\r\n  handleChangeText = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // filling drop-down selection with podcast genres\r\n  componentDidMount() {\r\n    axios({\r\n      url: `https://listen-api.listennotes.com/api/v2/genres`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      headers: {\r\n        \"X-ListenAPI-Key\": `d45d36385df142229be4941f98e07c20`,\r\n      },\r\n    }).then((res) => {\r\n      this.setState({\r\n        genres: res.data.genres,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectChange = (e) => {\r\n    // getting the name of the selected option\r\n    console.log(e.target.options[e.target.selectedIndex].text);\r\n\r\n    this.setState({\r\n      podcastInput: e.target.options[e.target.selectedIndex].text,\r\n      genreSelected: e.target.value,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const {hideErrorWindow, closeError, error:{ popUpError } } = this.props;\r\n    return (\r\n      <div>\r\n        <form>\r\n\r\n          <section className=\"travelDetails\">\r\n            <h2><i className=\"fas fa-map-marker-alt\" aria-label=\"Icon of a location pin\"></i> Type in your travel details</h2>\r\n            <div className=\"startingPoint\">\r\n              <label htmlFor=\"userInputFrom\">Starting Point:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"userInputFrom\"\r\n                id=\"userInputFrom\"\r\n                value={this.state.userInputFrom}\r\n                onChange={this.handleChangeText}\r\n                placeholder=\"12 Bloor Street Toronto\"\r\n              />\r\n            </div>\r\n            <div className=\"destination\">\r\n              <label htmlFor=\"userInputTo\">Destination:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"userInputTo\"\r\n                id=\"userInputTo\"\r\n                value={this.state.userInputTo}\r\n                onChange={this.handleChangeText}\r\n                placeholder=\"11 Yonge Street Toronto\"\r\n              />\r\n            </div>\r\n          </section>\r\n\r\n\r\n          <section className=\"podcastDetails\">\r\n            <div className=\"podcastSearch\">\r\n              <h2><i className=\"fas fa-podcast\" aria-label=\"Icon of a microphone\"></i> Type in your podcast details</h2>\r\n              <label htmlFor=\"podcastInput\">Podcast Search:</label>\r\n              <input\r\n                onChange={this.handleChangeText}\r\n                type=\"text\"\r\n                name=\"podcastInput\"\r\n                id=\"podcastInput\"\r\n                value={this.state.podcastInput}\r\n                placeholder=\"ex: genre, title, creator\"\r\n                aria-label=\"example: genre, title, creator\"\r\n              ></input>\r\n            </div>\r\n            <div className=\"podcastDropDown\">\r\n              <p>Or pick a genre:</p>\r\n              <select\r\n                type=\"genresSelect\"\r\n                id=\"genreSelect\"\r\n                name=\"genreSelect\"\r\n                onChange={this.selectChange}\r\n              >\r\n                <option value=\"\">Please select an genre</option>\r\n                {this.state.genres.map((genre) => {\r\n                  return (\r\n                    <option value={genre.id} key={genre.id}>\r\n                      {genre.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </section>\r\n          {\r\n            popUpError ? <Error hideErrorWindow={hideErrorWindow}/> : null\r\n          }\r\n\r\n          <button\r\n            className=\"formButton\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n\r\n              if (!this.state.podcastInput || !this.state.userInputFrom || !this.state.userInputTo) {\r\n                closeError()\r\n              } else {\r\n                this.props.inputText(event, this.state.podcastInput, this.state.genreSelected);\r\n                this.props.handleSubmit(event, this.state.userInputFrom, this.state.userInputTo);\r\n                this.setState({\r\n                  podcastInput: \"\",\r\n                  userInputFrom: \"\",\r\n                  userInputTo: \"\",\r\n                  genreSelected: \"\",\r\n                })\r\n\r\n              }\r\n            }\r\n            }\r\n          >\r\n            Find suggestions!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PodcastInput;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Suggestion extends Component {\r\n  render() {\r\n    const { showHideSuggestion, stateSuggestion, propToprop:{length, transitTime} } = this.props;\r\n\r\n    return (\r\n      <div\r\n      onClick={ showHideSuggestion }\r\n      className=\"suggestion\"\r\n      style={{ display: stateSuggestion.displaySuggestion ? \"block\" : \"none\", }} >\r\n        {\r\n            Math.round(length / 60) <= 1 ?\r\n                <p>podcast length:{Math.round(length / 60)} minute </p> :\r\n                <p>podcast length:{Math.round(length / 60)} minutes</p>\r\n        }\r\n\r\n        <p> walk:{transitTime.pedestrian} minutes</p>\r\n        <p>bike:{transitTime.bicycle} minutes</p>\r\n        <p>drive:{transitTime.fastest} minutes</p>\r\n\r\n        {\r\n            length / 60 < transitTime.fastest ?\r\n                <p>suggestion: you should drive</p> :\r\n                length / 60 < transitTime.bicycle ?\r\n                    <p>suggestion: you should bike</p> :\r\n                    <p>suggestion: you should walk</p>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Suggestion;\r\n","import React, { Component } from 'react';\r\nimport Suggestion from \"./Suggestion\";\r\n\r\nclass PodcastItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            displaySuggestion: false\r\n        }\r\n    }\r\n\r\n    showHideSuggestion = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            displaySuggestion: !this.state.displaySuggestion,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { transitTime, title, description, length, image, savePodcast, audio, id } = this.props;\r\n        return (\r\n            <li>\r\n                <button onClick={ this.showHideSuggestion }className=\"podcastButton\">\r\n                    <div className=\"thumbnailWrapper\">\r\n                        <img src={image} alt={title}></img>\r\n                        <p>{title}</p>\r\n                    </div>\r\n                </button>\r\n\r\n                <button onClick={(e) => { savePodcast(e, title, image, audio, id) }}>Save podcast</button>\r\n\r\n                <Suggestion showHideSuggestion={this.showHideSuggestion} stateSuggestion={this.state} propToprop={this.props}/>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PodcastItem;","import React from 'react';\r\n\r\nconst PodcastSaved = (props) => {\r\n   const { title, audio, image, id, deletePodcast} = props\r\n        return(\r\n            <li className=\"podcastItem\">\r\n                <div className=\"podcastNameImage\">\r\n                    <div className=\"podcastImageWrapper\">\r\n                        <img src={image} alt={title}></img>\r\n                    </div>\r\n                    <div className=\"podcastNameDelete\">\r\n                        <p>{title}</p>\r\n                        <button onClick={(e) => { deletePodcast(e, id) }}>X</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <audio controls src={audio}>Your browser does not support the audio element.</audio>\r\n            </li>\r\n        )\r\n    \r\n}\r\n\r\nexport default PodcastSaved;","import React from 'react';\r\nimport PodcastSaved from './PodcastSaved';\r\n\r\nconst PodcastMenu = (props) => {\r\n    const {user, login, logout, podcastList, deletePodcast} = props\r\n    return(\r\n        <div className=\"podcastMenu\">\r\n\r\n            {/* SAVED PODCAST BY CERTAIN USER */}\r\n            {user ?\r\n                <ul className=\"podcastUserList\">\r\n                    {\r\n                        podcastList.map((podcastItem) => {\r\n                            const { key, podcasts } = podcastItem\r\n                            return (\r\n                                <PodcastSaved key={key} title={podcasts.title} image={podcasts.image} audio={podcasts.audio} deletePodcast={deletePodcast} id={key} />\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                : null}\r\n\r\n            {/* Log In/ Log Out button */}\r\n            {user ? <button className=\"loginButton\" onClick={logout}>Log Out</button> : <button onClick={login}>Log In </button>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PodcastMenu;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBA4ai_gR73-t0M4UwfozSqZG4kFu7k3GA\",\r\n    authDomain: \"podcastprioritizer.firebaseapp.com\",\r\n    databaseURL: \"https://podcastprioritizer.firebaseio.com\",\r\n    projectId: \"podcastprioritizer\",\r\n    storageBucket: \"podcastprioritizer.appspot.com\",\r\n    messagingSenderId: \"703854841662\",\r\n    appId: \"1:703854841662:web:25566ffa1b31854dd7e66f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from \"react\"\r\n\r\nconst headerSection = () => {\r\n    return (<header>\r\n        <h1>Podcast Prioritizer <i className=\"fas fa-headphones\" aria-label=\"Icon of headphones\"></i></h1>\r\n        <p>Can't decide which podcast to listen to on your next journey? Not sure whether you should walk, bike or drive? Use this web app by inputting your 'Starting Point', 'Destination', and a podcast search term to determine which podcast you should listen to, and how you should get there.</p>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default headerSection;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.scss\";\r\nimport MapMode from './MapMode'\r\nimport PodcastInput from \"./PodcastInput\";\r\nimport PodcastItem from \"./PodcastItem\";\r\nimport PodcastMenu from './PodcastMenu';\r\nimport firebase from \"./database\";\r\nimport Error from \"./Error\";\r\nimport HeaderSection from \"./headerSection\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      modes: [\"bicycle\", \"pedestrian\", \"fastest\"],\r\n      genres: [],\r\n      transitTime: {},\r\n      podcasts: [],\r\n      mapUrl: \"\",\r\n      user: null,\r\n      userId: \"anonymous\",\r\n      podcastList: [],\r\n      popUpError: false,\r\n      menuOpen: false\r\n    };\r\n    \r\n    this.hideError = this.hideError.bind(this);\r\n    this.showError = this.showError.bind(this);\r\n  }\r\n\r\n  hideError() {\r\n    this.setState({\r\n      popUpError: false\r\n    });\r\n  }\r\n\r\n  showError() {\r\n    this.setState({\r\n      popUpError: true\r\n    });\r\n  }\r\n\r\n  // Login method for Google Authentication\r\n  login = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const auth = firebase.auth();\r\n\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      const user = result.user;\r\n      this.setState({\r\n        user,\r\n        userId: user.uid,\r\n      })\r\n    })\r\n  }\r\n\r\n  // Logout method for Google Authentication\r\n  logout = () => {\r\n    const auth = firebase.auth();\r\n    auth.signOut().then(() => {\r\n      this.setState({\r\n        user: null,\r\n        userId: \"\",\r\n        podcastList: []\r\n      })\r\n    })\r\n  }\r\n\r\n  // Save podcast to user list when button is clicked\r\n  savePodcast = (e, title, image, audio, id) => {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    // Prevent default\r\n    e.preventDefault();\r\n\r\n    // Create a new object with required items\r\n    const podcast = {\r\n      title: title,\r\n      image: image,\r\n      audio: audio,\r\n    }\r\n\r\n    // Go to the user's ID and the podcast ID and set the above object\r\n    dbRef.child(`${this.state.userId}/${id}`).set(podcast)\r\n  }\r\n  \r\n  // Delete podcast item from the user's list\r\n  deletePodcast = (e, key) => {\r\n\r\n    // Prevent default\r\n    e.preventDefault();\r\n\r\n    // Go to the user's ID in the database\r\n    const dbRef = firebase.database().ref(this.state.userId);\r\n\r\n    // Remove the podcast based on its ID\r\n    dbRef.child(key).remove();\r\n\r\n  }\r\n\r\n  podcastMenu = () => {\r\n    this.setState({\r\n      menuOpen: !this.state.menuOpen\r\n    })\r\n  }\r\n\r\n   // function to modify time from 00:00:00 format to minutes\r\n  timeChange = (time) => {\r\n    const arr = time.split(\":\");\r\n    const add = parseInt(arr[0] * 60) + parseInt(arr[1]) + parseInt(arr[2] / 60);\r\n    return add;\r\n  };\r\n\r\n  // making an API call for ROUTE\r\n  handleSubmit = (e, from, to) => {\r\n    // Prevent default\r\n    e.preventDefault();\r\n\r\n    // Axios call to mapquest API to get the map of the route  \r\n      axios({\r\n        url: `https://www.mapquestapi.com/staticmap/v5/map`,\r\n        method: `GET`,\r\n        responseType: `json`,\r\n        params: {\r\n          key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\r\n          format: `png`,\r\n          start: from,\r\n          end: to,\r\n          size: `200,200`,\r\n          countryCode: `CA`,\r\n          scalebar: true,\r\n          margin: 40,\r\n        },\r\n      }).then((res) => {\r\n        this.setState({ mapUrl: res.request.responseURL });\r\n      });\r\n    \r\n    // For each mode of transportation, find the transit time, convert it to minutes and save it to state\r\n    this.state.modes.forEach((mode) => {\r\n      axios({\r\n        url: `https://www.mapquestapi.com/directions/v2/route`,\r\n        method: `GET`,\r\n        responseType: `json`,\r\n        params: {\r\n          key: `x3MrPIPmomzlRE4OXlE1fjsepd4chw3q`,\r\n          from: from,\r\n          to: to,\r\n          routeType: mode,\r\n         \r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.route.distance > 100) {\r\n            this.setState({\r\n              popUpError: true,\r\n            })\r\n          }\r\n\r\n          const timeCopy = { ...this.state.transitTime }\r\n          timeCopy[mode] = this.timeChange(res.data.route.formattedTime);\r\n          this.setState({\r\n            transitTime: timeCopy,\r\n          });\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    });\r\n  };\r\n\r\n  // making an API call for PODCAST\r\n  podcastCall = (e, inputText, genreSel) => {\r\n    // Prevent default\r\n    e.preventDefault();\r\n\r\n    // call the listennotes API and search for podcasts\r\n    axios({\r\n      url: `https://listen-api.listennotes.com/api/v2/search`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      headers: {\r\n        \"X-ListenAPI-Key\": `d45d36385df142229be4941f98e07c20`,\r\n      },\r\n      params: {\r\n        q: inputText,\r\n        len_max: this.state.transitTime.pedestrian,\r\n        genre_ids: genreSel,\r\n      },\r\n    }).then((res) => {\r\n      this.setState({\r\n        podcasts: res.data.results,\r\n      });\r\n    });\r\n  };\r\n\r\n  // Clear the list of podcast results from the page\r\n  clearResults = () => {\r\n    this.setState({\r\n      mapUrl: \"\",\r\n      transitTime: {},\r\n      podcasts: [],\r\n    });\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // componentDidMount method\r\n  componentDidMount() {\r\n    const auth = firebase.auth();\r\n\r\n    // Check to see if the user was already logged in and set the state again\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({\r\n          user\r\n        });\r\n      }\r\n\r\n      // Set the userId state again\r\n      this.setState({\r\n        userId: this.state.user.uid\r\n      })\r\n\r\n      // Reference the userId in the database\r\n      const dbRef = firebase.database().ref(this.state.userId);\r\n\r\n      // On load/change grab the user's saved list of podcasts and save to state\r\n      dbRef.on('value', (response) => {\r\n        const podArray = [];\r\n        const data = response.val()\r\n\r\n        for (let key in data) {\r\n          podArray.push({ key: key, podcasts: data[key] })\r\n        }\r\n\r\n        this.setState({\r\n          podcastList: podArray\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  // render method\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"App\">\r\n        <div className=\"wrapper\">\r\n          <HeaderSection />\r\n\r\n        {/* MENU TO OPEN/CLOSE PODCAST LIST AND LOGIN BUTTON */}\r\n        <button className=\"menuButton\" onClick={this.podcastMenu}><i className=\"fas fa-bars\"></i></button>\r\n\r\n        {/* LOGIN AND PODCAST LIST MENU */}\r\n        {this.state.menuOpen ? <PodcastMenu key=\"podcastMenu\" user={this.state.user} podcastList={this.state.podcastList} logout={this.logout} login={this.login} deletePodcast={this.deletePodcast} /> : null}\r\n\r\n        {/* FORM INPUT */}\r\n        <PodcastInput inputText={this.podcastCall} handleSubmit={this.handleSubmit} error={this.state} hideErrorWindow={this.hideError} closeError={this.showError}/>\r\n        \r\n        {\r\n          this.state.popUpError ? <Error hideErrorWindow={this.hideError} />  : null\r\n        }\r\n        \r\n        {/* SHOW MAP AND TRANSIT TIMES FOR EACH MODE OF TRANSPORTATION */}\r\n\r\n        <MapMode map={this.state.mapUrl} transitTime={this.state.transitTime}/>\r\n      \r\n          {/* LIST OF PODCASTS FROM THE SEARCH */}\r\n          <ul>\r\n            {\r\n              this.state.podcasts.map((podcast) => {\r\n                const { id, image, title_original, description_original, audio_length_sec, audio} = podcast\r\n                return (\r\n                  <PodcastItem key={id} image={image} title={title_original} description={description_original} length={audio_length_sec} transitTime={this.state.transitTime} savePodcast={this.savePodcast} audio={audio} id={id} />\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n\r\n         {/* CLEAR THE LIST OF PODCAST RESULTS */}\r\n          {\r\n            this.state.podcasts.length !== 0 ? (\r\n             <button onClick={this.clearResults}>Start over</button>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <footer>Copyright &copy; Podcast Prioritizer | Made at Juno College</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//Landing header with a Get Started button, or arrow, moves to user input\r\n\r\n// User inputs for To and From\r\n\r\n// Error handling for empty inputs, regex to prevent special characters from being typed, error when address can't be found\r\n\r\n// Users submit map requests\r\n\r\n// Get travel time and distance.  Convert time to minutes and store in state\r\n\r\n// Genre dropdown or user search for podcast, user submits\r\n\r\n// take genre/search value, add time state to API query, returns 10 results\r\n\r\n// map results to page, clicking on a podcast will show whether they should walk or bike, under the grid of the results\r\n\r\n/* Components:\r\nApp\r\nLocation Input: onChange: handleLocation\r\nPodcast Input: onChange:handlepodcast\r\nPodcast Grid\r\nTravel Mode Result\r\nReset Button\r\n*/\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}